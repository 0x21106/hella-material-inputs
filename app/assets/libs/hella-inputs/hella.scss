// Variables
$inputWidth: 100%;
$inputHeight: 40px;
$inputBorderRadius: 5px;
$inputPadding: 0 10px 0 10px;
$inputMargin: 5px 0;
$inputFontSize: 0.85em;
$inputFontWeight: 600;

// Prefix Variables
$inputPrefixFontSize: 0.85em;

// Placeholder Variables
$inputCustomPlaceholderFontSize: 0.85em;
$inputCustomPlaceholderFontWeight: 600;
$inputCustomPlaceholderActiveTop: 5px;
$inputCustomPlaceholderActiveLeft: -5px;
$inputCustomPlaceholderActiveFontSize: 0.75em;
$inputCustomPlaceholderActiveTransition: top 0.15s ease-out, left 0.15s ease-out,
  font-size 0.15s ease-out;

// Password Toggle Variables
$inputPasswordToggleFontSize: 0.9em;

// Hella Button, Submit Variables
$inputButtonFontSize: 1em;
$inputButtonFontSize: bold;

// Button, Submit Effective3d
$inputButtonEffective3dTransition: top 0.15s ease-out, box-shadow 0.15s ease-out;
$inputButtonEffective3dActiveTop: 5px;

// Button, Submit Effective Outline
$inputButtonEffectiveOutlineTransition: box-shadow 0.15s ease-out;
$inputButtonEffectiveOutlineWidth: 4px;

// File Selector Variables
$hellaFileSelectorBorderRadius: 10px;
$hellaFileSelectorPadding: 5px;
$hellaFileSelectorMargin: 5px;

$hellaFileSelectorFontSize: 1.5em;
$hellaFileSelectorTextShadow: 0 0 1px rgba(0, 0, 0, 0.5);

$hellaFileSelectorFileNameHeight: 20px;
$hellaFileSelectorFileNameBorderRadius: 5px;
$hellaFileSelectorFileNamePadding: 2px 5px;
$hellaFileSelectorFileNameFontSize: 0.65em;

// Hella Radio Variables
$hellaRadioScale: 25px;
$hellaRadioMargin: 2px 5px;
$hellaRadioBorderRadius: 50%;
$hellaRadioSelectorScale: calc((#{$hellaRadioScale} / 100) * 60);

// Hella Checkbox Variables
$hellaCheckboxScale: 25px;
$hellaCheckboxMargin: 2px 5px;
$hellaCheckboxBorderRadius: 5px;
$hellaCheckboxSelectorScale: calc((#{$hellaCheckboxScale} / 100) * 70);

// Dark Mode
$darkInputBackground: #252937;
$darkInputColor: #6c757d;
$darkInputPlaceholderColor: #6c757d;
$darkInputTextShadow: 0 0 5px rgba(0, 0, 0, 0.3);

$darkInputPrefixColor: #6c757d;
$darkInputPrefixTextShadow: 0 0 5px rgba(0, 0, 0, 0.3);

$darkInputPasswordToggleColor: rgb(108, 117, 125);

$darkInputButtonEffective3dBoxShadow: 0 5px 0 0 rgba(86, 94, 100, 1);
$darkInputButtonEffectiveOutlineBoxShadow: 0 0 0 #{$inputButtonEffectiveOutlineWidth}
  rgba(143, 149, 170, 0.5);

$darkHellaFileSelectorBackgroundColor: rgb(37, 41, 55);
$darkHellaFileSelectorIconColor: rgb(108, 117, 125);
$darkHellaFileSelectorIconActiveColor: rgba(255, 125, 136, 1);
$darkHellaFileSelectorFileNameBackgroundColor: rgb(37, 41, 55);
$darkHellaFileSelectorFileNameColor: white;

$darkHellaRadioBackgroundColor: rgb(59, 63, 70);
$darkHellaRadioSelectorBackgroundColor: rgb(198, 211, 235);

$darkHellaCheckboxBackgroundColor: rgb(59, 63, 70);
$darkHellaCheckboxSelectorBackgroundColor: rgb(198, 211, 235);



// Light Mode
$inputBackground: #c6d3eb;
$inputColor: #3b3f46;
$inputPlaceholderColor: #3b3f46;
$inputTextShadow: none;

$inputPrefixColor: #3b3f46;
$inputPrefixTextShadow: none;

$inputPasswordToggleColor: rgb(59, 63, 70);

$inputCustomPlaceholderColor: #3b3f46;
$inputCustomPlaceholderTextShadow: none;
$inputButtonEffective3dBoxShadow: 0 5px 0 0 rgba(108, 117, 125, 1);
$inputButtonEffectiveOutlineBoxShadow: 0 0 0 #{$inputButtonEffectiveOutlineWidth}
  rgba(84, 90, 100, 0.5);
$hellaFileSelectorBackgroundColor: rgb(198, 211, 235);
$hellaFileSelectorIconColor: rgb(108, 117, 125);
$hellaFileSelectorIconActiveColor: rgba(255, 125, 136, 1);
$hellaFileSelectorFileNameBackgroundColor: rgb(108, 117, 125);
$hellaFileSelectorFileNameColor: white;

$hellaRadioBackgroundColor: rgb(198, 211, 235);
$hellaRadioSelectorBackgroundColor: rgba(59, 63, 70, 0.6);

$hellaCheckboxBackgroundColor: rgb(198, 211, 235);
$hellaCheckboxSelectorBackgroundColor: rgba(59, 63, 70, 0.6);

// Info Border Width
$inputHellaInfoBorderWidth: .13em;
$darkInputHellaInfoBorderWidth: .1em;

// Warning Colors
$inputHellaWarningBackgroundColor: rgba(255,104,45, .5);
$inputHellaWarningColor: rgb(255,127,77);

// Danger Colors
$inputHellaDangerBackgroundColor: rgba(255,45,48, .7);
$inputHellaDangerColor: rgba(255,45,48, .7);

// Success Colors
$inputHellaSuccessBackgroundColor: rgba(0,200,104, .7);
$inputHellaSuccessColor: rgba(0,180,104, .7);

// Dark Warning Color
$darkInputHellaWarningBackgroundColor: rgba(255,104,45, .9);
$darkInputHellaWarningColor: rgba(255,127,77, .9);

// Dark Danger Color
$darkInputHellaDangerBackgroundColor: rgba(255,35,86, .9);
$darkInputHellaDangerColor: rgba(255,35,86, .85);

// Dark Success Colors
$darkInputHellaSuccessBackgroundColor: rgba(0,255,132, 1);
$darkInputHellaSuccessColor: rgb(0,255,132);

// HellaProgressive
$hellaProgressiveRightOffset: 10px;
$hellaProgressiveInputPaddingRight: 35px;
$hellaProgressiveDeactivateTransition: opacity .3s ease-out;
$hellaProgressiveAnimation:rotate-360 1s linear infinite;
$hellaProgressiveScale:15px;
$hellaProgressiveStrokeWidth: 0.1em;

$hellaProgressiveMaskStrokeWidth: 0.12em;
$hellaProgressiveMaskStrokeLeft: -0.1em;
$hellaProgressiveMaskStrokeTop: -0.12em;


// Light Mode ProgressiveColor
$hellaProgressiveSuccessColor: rgb(64, 173, 77);
$hellaProgressiveMaskSuccessColor: rgb(18, 122, 0);

$hellaProgressiveDangerColor: rgb(255,60,73);
$hellaProgressiveMaskDangerColor: rgba(133, 34, 41, 0.55);

$hellaProgressiveWarningColor: rgb(255,140,0);
$hellaProgressiveMaskWarningColor: rgba(156, 87, 3, 0.527);

// Dark Mode Progressive Color
$darkHellaProgressiveSuccessColor: rgb(64, 207, 81);
$darkHellaProgressiveMaskSuccessColor: rgb(33, 102, 41);

$darkHellaProgressiveDangerColor: rgb(165, 34, 43);
$darkHellaProgressiveMaskDangerColor: rgba(209, 49, 60, 0.582);

$darkHellaProgressiveWarningColor: rgb(255,140,0);
$darkHellaProgressiveMaskWarningColor: rgba(71, 40, 1, 0.568);

.hella-container {
  min-width: 250px;
  position: relative;
  display: flex;
  flex-direction: row;
  align-items: center;
  
  &.hella-block {
    width: 100%;
  }

  .hella-progressive-container {
    width: auto;
    height: auto;
    position: absolute;
    right: $hellaProgressiveRightOffset;
    border: $hellaProgressiveStrokeWidth solid $hellaProgressiveSuccessColor;
    border-radius:50%;
    animation: $hellaProgressiveAnimation;
    transition: $hellaProgressiveDeactivateTransition;
    &.hella-deactivated {
      opacity: 0;
    }
    & + input.hella-input {
      padding-right: $hellaProgressiveInputPaddingRight;
    }
    .hella-progressive {
      width: $hellaProgressiveScale;
      height: $hellaProgressiveScale;
      &::after {
        content:"";
        width: calc(#{$hellaProgressiveScale} + (#{$hellaProgressiveStrokeWidth * 2}));
        height: calc(#{$hellaProgressiveScale} + (#{$hellaProgressiveStrokeWidth * 2}));
        border:#{$hellaProgressiveMaskStrokeWidth} solid transparent;
        border-top-color:$hellaProgressiveMaskSuccessColor;
        border-radius:50%;
        position: absolute;
        top:$hellaProgressiveMaskStrokeTop;
        left:$hellaProgressiveMaskStrokeLeft;
      }
    }
    &.half-progressive {
      border:none !important;
      .hella-progressive {
        &::after {
          border-top-color:$hellaProgressiveSuccessColor;
        }
      }
    }
    &.danger {
      border: $hellaProgressiveStrokeWidth solid $hellaProgressiveDangerColor;
      .hella-progressive {
        &::after {
          border-top-color:$hellaProgressiveMaskDangerColor;
        }
      }
      &.half-progressive {
        border:none !important;
        .hella-progressive {
          &::after {
            border-top-color: $hellaProgressiveDangerColor;
          }
        }
      }
    }
    &.warning {
      border: $hellaProgressiveStrokeWidth solid $hellaProgressiveWarningColor;
      .hella-progressive {
        &::after {
          border-top-color:$hellaProgressiveMaskWarningColor
        }
      }
      &.half-progressive {
        border:none !important;
        .hella-progressive {
          &::after {
            border-top-color: $hellaProgressiveWarningColor;
          }
        }
      }
    }
  }

  input.hella-input {
    width: $inputWidth;
    height: $inputHeight;
    background: $inputBackground;
    color: $inputColor;
    border-radius: $inputBorderRadius;
    margin: $inputMargin;
    padding: $inputPadding;
    font-size: $inputFontSize;
    font-weight: $inputFontWeight;
    text-shadow: $inputTextShadow;
    border: none;
    outline: none;
    transition: background-color .3s ease-out;
    &::placeholder {
      color: $inputPlaceholderColor;
    }

    &[type="button"].hella-input,
    &[type="submit"].hella-input {
      @extend .hella-input;
      font-size: $inputButtonFontSize;
      font-weight: $inputButtonFontSize;
      &.hella-effective-3d {
        position: relative;
        top: 0;
        transition: $inputButtonEffective3dTransition;
        box-shadow: $inputButtonEffective3dBoxShadow;
        &:active {
          top: $inputButtonEffective3dActiveTop;
          box-shadow: 0 0 0 0 rgba(0, 0, 0, 1);
        }
      }

      &.hella-effective-outline {
        box-shadow: 0 0 0 0 rgba(0, 0, 0, 0);
        transition: $inputButtonEffectiveOutlineTransition;
        &:active,
        &:focus {
          box-shadow: $inputButtonEffectiveOutlineBoxShadow;
        }
      }
      // End Of Hella Input [button, submit]
    }
    &.hella-warning {
      box-shadow: 0 0 0 $inputHellaInfoBorderWidth $inputHellaWarningBackgroundColor;
      &::placeholder,
      & {
        color: $inputHellaWarningColor;
      }
    }
    &.hella-danger {
      box-shadow: 0 0 0 $inputHellaInfoBorderWidth $inputHellaDangerBackgroundColor;
      &::placeholder,
      & {
        color: $inputHellaDangerColor;
      }
    }
    &.hella-success {
      box-shadow: 0 0 0 $inputHellaInfoBorderWidth $inputHellaSuccessBackgroundColor;
      &::placeholder,
      & {
        color: $inputHellaSuccessColor;
      }
    }
    // End Of Hella Input
  }

  .hella-prefix {
    position: absolute;
    left: 10px;
    font-size: $inputPrefixFontSize;
    color: $inputPrefixColor;
    text-shadow: $inputPrefixTextShadow;
    & ~ input.hella-input {
      padding-left: 35px;
      & + .hella-placeholder {
        margin-left: 35px;
      }
    }
    // End Of Hella Prefix
  }

  .hella-placeholder {
    color: $inputCustomPlaceholderColor;
    font-size: $inputCustomPlaceholderFontSize;
    font-weight: $inputCustomPlaceholderFontWeight;
    text-shadow: $inputCustomPlaceholderTextShadow;
    position: absolute;
    top: 50%;
    left: 0;
    transform: translateY(-50%);
    &.active {
      transition: $inputCustomPlaceholderActiveTransition;
      top: $inputCustomPlaceholderActiveTop;
      left: $inputCustomPlaceholderActiveLeft;
      font-size: $inputCustomPlaceholderActiveFontSize;
    }
    &.deactive {
      transition: $inputCustomPlaceholderActiveTransition;
    }
    // End Of Hella Placeholder
  }

  .hella-password-toggle {
    width: 0;
    position: absolute;
    right: 17px;
    color: $inputPasswordToggleColor;
    font-size: $inputPasswordToggleFontSize;
    display: flex;
    justify-content: center;
    cursor: pointer;
    & ~ input.hella-input {
      padding-right: 35px;
    }
    // End Of Hella Password Toggle
  }

  .hella-file-selector-container {
    display: flex;
    align-items: center;
    &.hella-fluid {
      width: 100%;
      .hella-file-selector {
        width: 100%;
      }
    }
    .hella-file-selector {
      width: 4em;
      height: 4em;
      background-color: $hellaFileSelectorBackgroundColor;
      border-radius: $hellaFileSelectorBorderRadius;
      padding: $hellaFileSelectorPadding;
      margin: $hellaFileSelectorMargin;
      cursor: pointer;
      display: flex;
      justify-content: center;
      align-items: center;
      position: relative;
      .file-selector-icon {
        color: $hellaFileSelectorIconColor;
        font-size: $hellaFileSelectorFontSize;
        text-shadow: $hellaFileSelectorTextShadow;
        transition: transform 0.2s ease-out, color 0.3s ease-out;
        &.active {
          transform: rotateZ(45deg);
          color: $darkHellaFileSelectorIconActiveColor;
          &:hover {
            transform: rotateZ(45deg) scale(1.2);
          }
        }
      }
      input[type="file"].hella-input {
        display: none;
      }
      .hella-file-name {
        max-width: 100%;
        height: $hellaFileSelectorFileNameHeight;
        border-radius: $hellaFileSelectorFileNameBorderRadius;
        padding: $hellaFileSelectorFileNamePadding;
        position: absolute;
        background-color: $hellaFileSelectorFileNameBackgroundColor;
        color: $hellaFileSelectorFileNameColor;
        font-size: $hellaFileSelectorFileNameFontSize;
        white-space: nowrap;
        bottom: -23px;
        overflow: hidden;
        text-overflow: ellipsis;
        // End Of Hella File Name
      }
      .hella-file-counter {
        width: 20px;
        height: 20px;
        position: absolute;
        top: -5px;
        right: -5px;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: rgb(108, 117, 125);
        box-shadow: 0 0 2px 0 rgba(0, 0, 0, 0.5);
        color: whitesmoke;
        border-radius: 50%;
        font-size: 0.75em;
        font-weight: 500;
      }
    }
    // End Of Hella File
  }
  &.hella-radio-container {
    min-width: 0;
    width: $hellaRadioScale;
    height: $hellaRadioScale;
    background-color: $hellaRadioBackgroundColor;
    margin: $hellaRadioMargin;
    border-radius: $hellaRadioBorderRadius;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    .hella-radio-label {
      width: 100%;
      height: 100%;
      border-radius: $hellaRadioBorderRadius;
      cursor: pointer;
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      input[type="radio"]:checked + .hella-radio-selector {
        width: $hellaRadioSelectorScale;
        height: $hellaRadioSelectorScale;
        background-color: $hellaRadioSelectorBackgroundColor;
        border-radius: $hellaRadioBorderRadius;
        position: absolute;
      }
      input {
        display: none;
      }
    }
    // End Of Hella Radio
  }

  &.hella-checkbox-container {
    min-width: 0;
    width: $hellaCheckboxScale;
    height: $hellaCheckboxScale;
    background-color: $hellaCheckboxBackgroundColor;
    margin: $hellaCheckboxMargin;
    border-radius: $hellaCheckboxBorderRadius;
    .hella-checkbox-label {
      width: 100%;
      height: 100%;
      margin: 0;
      padding: 0;
      position: relative;
      display:flex;
      justify-content:center;
      align-items:center;
      cursor: pointer;
      input[type='checkbox']:checked + .hella-checkbox-selector {
        width: $hellaCheckboxSelectorScale;
        height: $hellaCheckboxSelectorScale;
        background-color: $hellaCheckboxSelectorBackgroundColor;
        position: absolute;
        border-radius:$hellaCheckboxBorderRadius;
      }
      input {
        display:none;
      }
    }
  }
  // End Of Hella Container
}

html.hella-dark {
  .hella-container {
    .hella-progressive-container {
      border: $hellaProgressiveStrokeWidth solid $darkHellaProgressiveSuccessColor;
      .hella-progressive {
        &::after {
          border-top-color: $darkHellaProgressiveMaskSuccessColor;
        }
      }
      &.half-progressive {
        border:none !important;
        .hella-progressive {
          &::after {
            border-top-color: $darkHellaProgressiveSuccessColor;
          }
        }
      }
      &.danger {
        border: $hellaProgressiveStrokeWidth solid $darkHellaProgressiveDangerColor;
        .hella-progressive {
          &::after {
            border-top-color: $darkHellaProgressiveMaskDangerColor;
          }
        }
        &.half-progressive {
          border:none !important;
          .hella-progressive {
            &::after {
              border-top-color: $hellaProgressiveDangerColor;
            }
          }
        }
      }
      &.warning {
        border: $hellaProgressiveStrokeWidth solid $darkHellaProgressiveWarningColor;
        .hella-progressive {
          &::after {
            border-top-color: $darkHellaProgressiveMaskWarningColor;
          }
        }
        &.half-progressive {
          border:none !important;
          .hella-progressive {
            &::after {
              border-top-color: $darkHellaProgressiveWarningColor;
            }
          }
        }
      }
    }
    input.hella-input {
      background: $darkInputBackground;
      color: $darkInputColor;
      text-shadow: $darkInputTextShadow;
      &::placeholder {
        color: $darkInputPlaceholderColor;
      }
      &[type="button"].hella-input,
      &[type="submit"].hella-input {
        &.hella-effective-3d {
          box-shadow: $darkInputButtonEffective3dBoxShadow;
          &:active {
            box-shadow: 0 0 0 0 rgba(0, 0, 0, 1);
          }
        }
        &.hella-effective-outline {
          &:focus,
          &:active {
            box-shadow: $darkInputButtonEffectiveOutlineBoxShadow;
          }
        }
      }
      &.hella-warning {
        box-shadow: 0 0 0 $darkInputHellaInfoBorderWidth $darkInputHellaWarningBackgroundColor;
        &::placeholder,
        & {
          color: $darkInputHellaWarningColor;
        }
      }
      &.hella-danger {
        box-shadow: 0 0 0 $darkInputHellaInfoBorderWidth $darkInputHellaDangerBackgroundColor;
        &::placeholder,
        & {
          color: $darkInputHellaDangerColor;
        }
      }
      &.hella-success {
        box-shadow: 0 0 0 $darkInputHellaInfoBorderWidth $darkInputHellaSuccessBackgroundColor;
        &::placeholder,
        & {
          color: $darkInputHellaSuccessColor;
        }
      }
    }
    .hella-prefix {
      color: $darkInputPrefixColor;
      text-shadow: $darkInputPrefixTextShadow;
    }
    .hella-placeholder {
      color: $darkInputPlaceholderColor;
      text-shadow: $darkInputTextShadow;
    }
    .hella-password-toggle {
      color: $darkInputPasswordToggleColor;
    }

    .hella-file-selector-container {
      .hella-file-selector {
        background-color: $darkHellaFileSelectorBackgroundColor;
        .file-selector-icon {
          color: $darkHellaFileSelectorIconColor;
          &.active {
            color: $darkHellaFileSelectorIconActiveColor;
          }
        }
        .hella-file-name {
          background-color: $darkHellaFileSelectorFileNameBackgroundColor;
          color: $darkHellaFileSelectorFileNameColor;
        }
        .hella-file-counter {
        }
      }
    }
    &.hella-radio-container {
      background-color: $darkHellaRadioBackgroundColor;
      .hella-radio-label {
        input[type="radio"]:checked + .hella-radio-selector {
          background-color: $darkHellaRadioSelectorBackgroundColor;
        }
      }
    }
    &.hella-checkbox-container {
      background-color: $darkHellaCheckboxBackgroundColor;
      .hella-checkbox-label {
        input[type='checkbox']:checked + .hella-checkbox-selector {
          background-color:$darkHellaCheckboxSelectorBackgroundColor;
        }
      }
    }
    // End Of Hella Container
  }
  // End Of Dark Mode
}



@keyframes rotate-360 {
  from {
    transform: rotateZ(0deg);
  }
  to {
    transform: rotateZ(360deg);
  }
}